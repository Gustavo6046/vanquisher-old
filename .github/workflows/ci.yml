# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]

    name: Unit Testing on Python ${{ matrix.python-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v4
        env:
          POETRY_VIRTUALENVS_PATH: "$HOME/.cache/pypoetry/virtualenvs"

      - name: Cache Poetry
        uses: actions/cache@v1
        with:
          path: "$HOME/.cache/pypoetry/virtualenvs"
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Check Poetry
        run:  poetry --version

      #- name: Install Poetry dependencies
      #  run: poetry update

      - name: Install tox
        run:  poetry run pip install tox

      - name: Run tox
        run:  poetry run tox -e test

      - name: Send XML coverage report to Codacy
        uses: codacy/codacy-coverage-reporter-action@0.2.0
        with:
          project-token: 91b49712af1246ed881f3ed23f0647f1
          coverage-reports: coverage.xml

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '6', '7', '8', '9' ] # Imagine a '3.' in front of each. Okay, now blame Tox.

    name: Linting on Python 3.${{ matrix.python-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.${{ matrix.python-version }}

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v4
        env:
          POETRY_VIRTUALENVS_PATH: "$HOME/.cache/pypoetry/virtualenvs"

      - name: Cache Poetry
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Check Poetry
        run:  poetry --version

      #- name: Install Poetry dependencies
      #  run: poetry update

      - name: Install tox
        run:  poetry run pip install tox

      - name: Run tox
        run:  poetry run tox -e lint

  #build-win:
  #  runs-on: ubuntu-latest
  #
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
  #
  #    - name: PyInstaller Windows
  #      uses: JackMcKew/pyinstaller-action-windows@v0.1.2
  #      with:
  #        path: vanquisher
  #
  #    - uses: actions/upload-artifact@v2
  #      with:
  #        name: name-of-artifact
  #        path: dist/windows
